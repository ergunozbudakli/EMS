@model EMS.Models.Entity.Department

@{
    ViewBag.Title = "Departman Düzenle";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2><i class="fas fa-edit me-2"></i>Departman Düzenle</h2>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Id)

    <div class="card">
        <div class="card-body">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="row mb-3">
                <label class="col-md-2 col-form-label">Departman Adı</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row">
                <div class="offset-md-2 col-md-10">
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-save me-1"></i>Kaydet
                    </button>
                    <a href="@Url.Action("Index")" class="btn btn-secondary">
                        <i class="fas fa-arrow-left me-1"></i>Geri Dön
                    </a>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
    
    <script>
        $(document).ready(function () {
            $('form').on('submit', function (e) {
                e.preventDefault();
                if ($(this).valid()) {
                    var form = $(this);
                    $.ajax({
                        url: form.attr('action'),
                        type: 'POST',
                        data: form.serialize(),
                        success: function (result) {
                            if (result.success) {
                                Swal.fire({
                                    title: 'Başarılı!',
                                    text: result.message,
                                    icon: 'success',
                                    confirmButtonText: 'Tamam'
                                }).then((result) => {
                                    if (result.isConfirmed) {
                                        window.location.href = '@Url.Action("Index", "Department")';
                                    }
                                });
                            } else {
                                Swal.fire({
                                    title: 'Hata!',
                                    text: result.message,
                                    icon: 'error',
                                    confirmButtonText: 'Tamam'
                                });
                            }
                        },
                        error: function () {
                            Swal.fire({
                                title: 'Hata!',
                                text: 'İşlem sırasında bir hata oluştu.',
                                icon: 'error',
                                confirmButtonText: 'Tamam'
                            });
                        }
                    });
                }
            });
        });
    </script>
} 